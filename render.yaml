# render.yaml - Defines the application blueprint for Render

services:
  # ==================================
  # == PRODUCTION NODE.JS SERVICE ==
  # ==================================
  - name: renvo-node-final
    type: web
    runtime: docker
    repo: https://github.com/TheBigCompany1/Renvo
    branch: main
    autoDeploy: true
    healthCheckPath: /api/ping
    # Note: All production envVars (like PYTHON_API_URL) will be set
    # in the Render Dashboard after the blueprint is created.

  # ==================================
  # == PRODUCTION PYTHON SERVICE ==
  # ==================================
  - name: renvo-python
    type: web
    runtime: python
    repo: https://github.com/TheBigCompany1/Renvo
    branch: main
    autoDeploy: true
    rootDir: backend/agent_service
    buildCommand: "pip install -r requirements.txt"
    startCommand: "gunicorn --worker-class gevent --workers 4 app:app"
    healthCheckPath: /healthz
    # Note: All production envVars (API keys, REDIS_URL) will be set
    # in the Render Dashboard after the blueprint is created.

# ==================================================
# == PREVIEW ENVIRONMENT (STAGING) CONFIGURATION ==
# ==================================================
previews:
  - services:
      # For PRs, create a preview version of the Node.js service...
      - name: renvo-node-final
        # ...and apply the variables from your existing staging group.
        envVarGroup: renvo-staging

      # For PRs, create a preview version of the Python service...
      - name: renvo-python
        # ...and apply the same staging variables.
        envVarGroup: renvo-staging